set encoding utf8
array estaciones=["11095"]
array modelos=["CNRM-CM5","MIROC","CGCM","HadCM3","CanESM2","CSIRO-Mk3-6-0","GISS-E2-R-CC","inmcm4","IPSL-CM5A-LR","MIROC5","MIROC-ESM-CHEM","MPI-ESM-LR","NorESM1-ME"]
array escenarios=["RCP 4.5","RCP 6.0","RCP 8.5"]
nmodel=13
corte=286
max=400
datos="11095.csv"

set datafile separator ","
#set term pdf size 7cm,7cm square font 'Helvetica,12'
set term svg size 400,400 square font 'Helvetica,14'
set xdata time
set timefmt "%d/%m/%Y"
set format x "%Y"
set border linewidth 1.5
set grid lw 0.75
set encoding utf8
set key outside
set key right center
#set yrange[0:max]
set pointsize 0.3

#########################################################
####
####	Grafica las correlaciones de cada escenario RCP para cada modelo.
####
#########################################################
unset xdata
unset format x
set key inside top right at screen 0.9,0.85
#set autoscale fix
set size square
set xrange [1:max]
set yrange [1:max]
set xlabel 'Monthly historical rainfall (mm)'
set ylabel 'Monthly historical GCM rainfall (mm)'

# Hace la iteración para cada modelo y para cada escenario.
do for [i=1:nmodel] {
do for [j=1:3] {
set output estaciones[1].modelos[i].'scenario'.escenarios[j].'.svg'
col1=2
col2=4*i-1+j
stats datos using col1:col2 name "A"
corp = system(sprintf("Rscript f_correlacion.r %i",col2-2))
ti=sprintf("Station ".estaciones[1]."\n".modelos[i]."\n".escenarios[j]."\nr=%s",corp)
print(ti)
# Evita error con columnas vacías
if (exists("A_slope")) {f(x) = A_slope * x + A_intercept} else {f(x)=0}
plot datos u col1:col2 w p notitle lc rgb "#1966FF" lw 1.5 pt 7,\
f(x) title ti lc rgb "#FF7E00" lw 1.75 dt 7
#f(x) title sprintf("r=%s", corp) lc rgb "red" lw 1.5
#f(x) title sprintf("y=%.3fx+%.3f, r=%4.4f", A_slope, A_intercept, A_correlation) lc rgb "red" lw 1.5
#f(x) title sprintf("r=%s", rPearson) lc rgb "red" lw 1.5
}
}

#########################################################
####
####	Grafica las correlaciones de cada modelo.
####
#########################################################

do for [i=1:nmodel] {
set output estaciones[1].modelos[i].'historical.svg'
col1=2
col2=4*i-1
stats datos using col1:col2 name "A"
corp = system(sprintf("Rscript f_correlacion.r %i",col2-2))
ti=sprintf("Station ".estaciones[1]."\n".modelos[i]."\nr=%s",corp)
print(ti)
f(x) = A_slope * x + A_intercept
plot datos u col1:col2 w p notitle lc rgb "#1966FF" lw 1.5 pt 7,\
f(x) title ti lc rgb "#FF7E00" lw 1.75 dt 7
}
