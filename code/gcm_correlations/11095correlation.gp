set encoding utf8
array estaciones=["11095"]
array modelos=["CNRM-CM5","MIROC","CGCM","HadCM3","CanESM2","CSIRO-Mk3-6-0","GISS-E2-R-CC","inmcm4","IPSL-CM5A-LR","MIROC5","MIROC-ESM-CHEM","MPI-ESM-LR","NorESM1-ME"]
array escenarios=["RCP 4.5","RCP 6.0","RCP 8.5"]
nmodel=13
corte=286
max=500
datos="11095.csv"

set datafile separator ","
set term pdf size 40cm,10cm square font 'Georgia,12'
set xdata time
set timefmt "%d/%m/%Y"
set format x "%Y"
set border linewidth 1.5
set grid lw 1.5
set encoding utf8
set key outside
set key right center
set xlabel 'Año'
set ylabel 'Precipitación (mm)'
#set yrange[0:max]
set pointsize 0.5
#########################################################
####
####	Grafica las serie histórica contra las series globales.
####
#########################################################
do for [i=1:nmodel] {
set output estaciones[1].modelos[i].'.pdf'
set title 'Series estación '.estaciones[1]
# MODELO i
HIST2=4*i-1
# RCP 4.5
C1=HIST2+1
# RCP 6.0
C2=HIST2+2
# RCP 8.5
C3=HIST2+3

plot datos u 1:C1 w lp title "Serie RCP 4.5" lc rgb "orange" lw 1.5,\
datos u 1:C2 w lp title "Serie RCP 6.0" lc rgb "green" lw 1.5,\
datos u 1:C3 w lp title "Serie RCP 8.5" lc rgb "brown" lw 1.5,\
datos u 1:HIST2 w lp title "Serie modelo ".modelos[i] lc rgb "red" lw 1.5,\
datos u 1:2 w lp title "Serie histórica" lc rgb "blue" lw 1.5
}

#########################################################
####
####	Grafica las correlaciones de cada escenario RCP para cada modelo.
####
#########################################################
set term pdf size 12cm,12cm square font 'Georgia,12'
unset xdata
unset format x
set key inside top right
#set autoscale fix
set size square
set xrange [1:max]
set yrange [1:max]
set xlabel 'Precipitación serie histórica(mm)'
set ylabel 'Precipitación modelo global (mm)'

# Hace la iteración para cada modelo y para cada escenario.
do for [i=1:nmodel] {
do for [j=1:3] {
set output estaciones[1].modelos[i].'corr'.escenarios[j].'.pdf'
set title 'Correlación estación '.estaciones[1]
col1=2
col2=4*i-1+j
stats datos using col1:col2 name "A"
corp = system(sprintf("rscript f_correlacion.r %i",col2-2))
ti=sprintf(modelos[i]." ".escenarios[j]." r=%s",corp)
print(ti)
# Evita error con columnas vacías
if (exists("A_slope")) {f(x) = A_slope * x + A_intercept} else {f(x)=0}
plot datos u col1:col2 w p notitle lc rgb "blue" lw 1.5,\
f(x) title ti lc rgb "red" lw 1.5
#f(x) title sprintf("r=%s", corp) lc rgb "red" lw 1.5
#f(x) title sprintf("y=%.3fx+%.3f, r=%4.4f", A_slope, A_intercept, A_correlation) lc rgb "red" lw 1.5
#f(x) title sprintf("r=%s", rPearson) lc rgb "red" lw 1.5
}
}

#########################################################
####
####	Grafica las correlaciones de cada modelo.
####
#########################################################

do for [i=1:nmodel] {
set output estaciones[1].modelos[i].'corrHistóricos.pdf'
set title 'Correlación estación '.estaciones[1]
col1=2
col2=4*i-1
stats datos using col1:col2 name "A"
corp = system(sprintf("rscript f_correlacion.r %i",col2-2))
ti=sprintf(modelos[i]." r=%s",corp)
print(ti)
f(x) = A_slope * x + A_intercept
plot datos u col1:col2 w p notitle lc rgb "blue" lw 1.5,\
f(x) title ti lc rgb "red" lw 1.5
}